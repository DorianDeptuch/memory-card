{"version":3,"sources":["components/Score.js","components/Card.js","Images/pokemon-logo.png","components/Title.js","components/GameOver.js","components/StartGameScreen.js","components/GameComplete.js","components/BattleSlides.js","App.js","components/KonamiCode.js","index.js"],"names":["Score","props","style","gameOver","display","className","score","highScore","Card","onClick","alt","imgAlt","src","imgSrc","Title","logo","transform","GameOver","restartGame","StartGameScreen","handleStart","GameComplete","useState","mew","mewImg","mewCaught","setMewCaught","totalTime","setCaughtAllPokemon","setStartTime","Date","setSelectedCards","setScore","setHighScore","BattleSlides","hide","battleSlideAnimation","animationEnded","setAnimationEnded","zIndex","id","onAnimationEnd","App","pokemon","setPokemon","pokemonImages","setPokemonImages","startGame","setStartGame","caughtAllPokemon","startTime","endTime","setEndTime","setTotalTime","setBattleSlideAnimation","setGameOver","selectedCards","handleClick","e","shuffled","push","sort","Math","random","shuffleCards","prev","target","pushSelectedCards","includes","previous","scoreLogic","toISOString","slice","replace","console","log","useEffect","pokeNamesArray","pokeImagesArray","a","i","fetch","response","json","data","results","name","imageResponse","imageData","pokeImages","sprites","front_default","fetchData","handler","keys","setKeys","isKonamiCode","join","timeout","window","document","onkeydown","currentKeys","keyCode","37","38","39","40","65","66","clearTimeout","setTimeout","useKonamiCode","Array","map","card","cardInfo","ReactDOM","render","StrictMode","getElementById"],"mappings":"qOAceA,EAZD,SAACC,GACb,OACE,sBACEC,MAAQD,EAAME,SAAiC,CAAEC,QAAS,QAAjC,CAAEA,QAAS,QACpCC,UAAU,WAFZ,UAIE,iDAAoBJ,EAAMK,SAC1B,8CAAiBL,EAAMM,iBCCdC,EARF,SAACP,GACZ,OACE,qBAAKQ,QAASR,EAAMQ,QAASJ,UAAU,UAAvC,SACE,qBAAKK,IAAKT,EAAMU,OAAQC,IAAKX,EAAMY,YCL1B,MAA0B,yCCgB1BC,EAbD,SAACb,GACb,OACE,sBAAKI,UAAU,WAAf,UACE,qBACEK,IAAI,gBACJE,IAAKG,EACLb,MAAO,CAAEc,UAAW,iBAEtB,wDCESC,EAXE,SAAChB,GAChB,OACE,sBAAKI,UAAU,cAAf,UACE,4CACA,6CAAgBJ,EAAMK,MAAtB,aACA,8DAAiCL,EAAMM,aACvC,wBAAQE,QAASR,EAAMiB,YAAvB,+BCNS,SAASC,EAAT,GAA2C,IAAhBC,EAAe,EAAfA,YACxC,OACE,sBAAKf,UAAU,qBAAf,UACE,yDACA,kFACA,wBAAQI,QAASW,EAAjB,2BCLS,SAASC,EAAapB,GAAQ,IAAD,EACpBqB,mBAAS,OADW,mBACnCC,EADmC,aAEdD,mBAC1B,qFAHwC,mBAEnCE,EAFmC,aAKRF,oBAAS,IALD,mBAKnCG,EALmC,KAKxBC,EALwB,KAqB1C,OACE,sBAAKrB,UAAU,kBAAf,UACE,kEACmCJ,EAAMK,MADzC,cAC2D,IACxDL,EAAM0B,aAEPF,EAQA,sBAAKpB,UAAU,SAAf,UACE,gEACA,wBAAQI,QAxBI,WAClBR,EAAMiB,cACNQ,GAAa,GACbzB,EAAM2B,qBAAoB,GAC1B3B,EAAM4B,aAAa,IAAIC,MACvB7B,EAAM8B,iBAAiB,KAmBjB,4BATF,sBAAK1B,UAAU,SAAf,UACE,yEACA,qBAAKA,UAAU,SAAf,SACE,qBAAKK,IAAKa,EAAKX,IAAKY,EAAQf,QAxBtC,WACER,EAAM+B,SAAS,KACf/B,EAAMgC,aAAN,iBAA6BhC,EAAM0B,YACnCD,GAAa,cCVF,SAASQ,EAAT,GAAiD,IAE1DC,EAFiCC,EAAwB,EAAxBA,qBAAwB,EACjBd,oBAAS,GADQ,mBACtDe,EADsD,KACtCC,EADsC,KAM7D,OAHID,IACFF,EAAO,CAAE/B,QAAS,OAAQmC,OAAQ,IAGlC,sBAAKrC,MAAOiC,EAAZ,UACGC,GACC,qBACEI,GAAG,OAEHC,eAAgB,WACdH,GAAkB,IAEpBjC,UAAU,qBAGb+B,GACC,qBACEI,GAAG,QAEHC,eAAgB,WACdH,GAAkB,IAEpBjC,UAAU,yBC0KLqC,MA1Lf,WAAgB,IAAD,EACapB,mBAAS,GADtB,mBACNhB,EADM,KACC0B,EADD,OAEqBV,mBAAS,GAF9B,mBAENf,EAFM,KAEK0B,EAFL,OAIiBX,mBAAS,IAJ1B,mBAINqB,EAJM,KAIGC,EAJH,OAK6BtB,mBAAS,IALtC,mBAKNuB,EALM,KAKSC,EALT,OAMqBxB,oBAAS,GAN9B,mBAMNyB,EANM,KAMKC,EANL,OAOmC1B,oBAAS,GAP5C,mBAON2B,EAPM,KAOYrB,EAPZ,OAQqBN,mBAAS,IAR9B,mBAQN4B,EARM,KAQKrB,EARL,OASiBP,mBAAS,IAT1B,mBASN6B,EATM,KASGC,EATH,OAUqB9B,mBAAS,IAV9B,mBAUNK,EAVM,KAUK0B,EAVL,OAW2C/B,oBAAS,GAXpD,mBAWNc,EAXM,KAWgBkB,EAXhB,OAYmBhC,oBAAS,GAZ5B,oBAYNnB,GAZM,MAYIoD,GAZJ,SAa6BjC,mBAAS,IAbtC,qBAaNkC,GAbM,MAaSzB,GAbT,MA8Fb,SAAS0B,GAAYC,IAQrB,WACE,IAAIC,EAAW,GACfA,EAASC,KACPjB,EAAQkB,MAAK,WACX,MAAO,GAAMC,KAAKC,aAGtBnB,EAAWe,GACXb,EACED,EAAcgB,MAAK,WACjB,MAAO,GAAMC,KAAKC,aAjBtBC,GAsBF,SAA2BN,GACzB3B,IAAiB,SAACkC,GAChB,MAAM,GAAN,mBAAWA,GAAX,CAAiBP,EAAEQ,OAAOtD,SAvB5BuD,CAAkBT,GA2BpB,SAAoBA,GACdF,GAAcY,SAASV,EAAEQ,OAAOtD,MAClCqB,EAAa1B,EAAYD,EAAQC,EAAYD,GAC7CyB,GAAiB,IACjBwB,IAAY,IACHjD,GAASC,GAClByB,GAAS,SAACqC,GAAD,OAAcA,EAAW,KAClCpC,GAAa,SAACoC,GAAD,OAAcA,EAAW,MAEtCrC,GAAS,SAACqC,GAAD,OAAcA,EAAW,KAnCpCC,CAAWZ,GA1BPpD,GAAS,MACXsB,GAAoB,GACpBK,EAAa,KACbmB,EAAW,IAAItB,MAEfuB,EACE,IAAIvB,KAAKqB,EAAUD,GAChBqB,cACAC,MAAM,GAAI,IACVC,QAAQ,IAAK,MACbA,QAAQ,IAAK,OAkBpBC,QAAQC,IAAIjB,EAAEQ,OAAOtD,KAqCvB,SAASM,KACPqC,IAAY,GACZvB,EAAS,GACTH,EAAa,IAAIC,MAGnB,OA/HA8C,qBAAU,WAER,IAAIC,EAAiB,GACjBC,EAAkB,IAEP,uCAAG,0CAAAC,EAAA,+DAILC,EAAI,EAJC,YAIEA,EAAI,KAJN,iCAKSC,MAAM,+CALf,cAKRC,EALQ,gBAQKA,EAASC,OARd,OAQRC,EARQ,OASRzC,EAAUyC,EAAKC,QAAQL,GAAGM,KAC9BT,EAAejB,KAAKjB,GACpBC,EAAWiC,GAXC,QAIWG,IAJX,uBAaLA,EAAI,EAbC,aAaEA,EAAI,KAbN,kCAccC,MAAM,qCAAD,OACQD,IAf3B,eAcRO,EAdQ,iBAiBUA,EAAcJ,OAjBxB,QAiBRK,EAjBQ,OAkBRC,EAAaD,EAAUE,QAAQC,cACnCjB,QAAQC,IAAIc,GACZX,EAAgBlB,KAAK6B,GACrB3C,EAAiBgC,GArBL,QAaWE,IAbX,0EA0BdN,QAAQC,IAAR,MA1Bc,0DAAH,qDA6BfiB,KAKC,IC/DU,SAAuBC,GAAS,MAErBvE,mBAAS,IAFY,mBAEtCwE,EAFsC,KAEhCC,EAFgC,KAevCC,EACe,8CAAnBF,EAAKG,KAAK,KAEZrB,qBAAU,WACR,IAAIsB,EAGJC,OAAOC,SAASC,UAAY,SAAC3C,GAE3BqC,GAAQ,SAACO,GAAD,4BAAqBA,GAArB,EArBQC,EAqBqC7C,EAAE6C,QApBlD,CACLC,GAAI,OACJC,GAAI,KACJC,GAAI,QACJC,GAAI,OACJC,GAAI,IACJC,GAAI,KACJN,MARe,IAACA,KAwBhBO,aAAaZ,GAGbA,EAAUa,YAAW,kBAAMhB,EAAQ,MAAK,QAEzC,IAIHnB,qBAAU,WACJoB,IACFH,IACAE,EAAQ,OAET,CAACC,EAAcH,IDwBlBmB,EAAc,WACZhF,EAAS,KACTJ,GAAoB,GACpBwB,EAAW,IAAItB,MAEfuB,EACE,IAAIvB,KAAKqB,EAAUD,GAChBqB,cACAC,MAAM,GAAI,IACVC,QAAQ,IAAK,MACbA,QAAQ,IAAK,SA6ElB,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOtE,SAAUA,GAAUG,MAAOA,EAAOC,UAAWA,IAEpD,sBAAKF,UAAU,UAAf,UACI0C,EAEG5C,GAwBH,cAAC,EAAD,CACEG,MAAOA,EACPC,UAAWA,EACXW,YAAaA,KA1Bd+B,EAWC,cAAC5B,EAAD,CACEf,MAAOA,EACP0B,SAAUA,EACVC,aAAcA,EACdf,YAAaA,GACbU,oBAAqBA,EACrBD,UAAWA,EACXE,aAAcA,EACdE,iBAAkBA,KAlBpB,YAAI,IAAIkF,MAAM,MAAMC,KAAI,SAACxD,EAAGyD,GAAJ,OACtB,cAAC,EAAD,CAEEC,SAAUD,EACV1G,QAASgD,GACT5C,OAAQgC,EAAcsE,GACtBxG,OAAQgC,EAAQwE,IAJXA,MALX,cAAChG,EAAD,CAAiBC,YA/DzB,WACEkC,GAAwB,GACxByD,YAAW,WACT/D,GAAa,GACbnB,EAAa,IAAIC,QAChB,SAyFC,cAACI,EAAD,CAAcE,qBAAsBA,WE3L5CiF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,W","file":"static/js/main.9c67f7c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Score = (props) => {\n  return (\n    <div\n      style={!props.gameOver ? { display: \"flex\" } : { display: \"none\" }}\n      className=\"scoreDiv\"\n    >\n      <h3>Current Score: {props.score}</h3>\n      <h3>High Score: {props.highScore}</h3>\n    </div>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\n\nconst Card = (props) => {\n  return (\n    <div onClick={props.onClick} className=\"cardDiv\">\n      <img alt={props.imgAlt} src={props.imgSrc}></img>\n    </div>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/pokemon-logo.25821459.png\";","import React from \"react\";\nimport logo from \"../Images/pokemon-logo.png\";\n\nconst Title = (props) => {\n  return (\n    <div className=\"titleDiv\">\n      <img\n        alt=\"Pokemon title\"\n        src={logo}\n        style={{ transform: \"scale(0.25)\" }}\n      ></img>\n      <h1> Memory Card Game </h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from \"react\";\n\nconst GameOver = (props) => {\n  return (\n    <div className=\"gameOverDiv\">\n      <h1>GAME OVER!</h1>\n      <h3>You scored {props.score} points</h3>\n      <h3>Your all time high score is {props.highScore}</h3>\n      <button onClick={props.restartGame}>Restart Game?</button>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React from \"react\";\n\nexport default function StartGameScreen({ handleStart }) {\n  return (\n    <div className=\"startGameScreenDiv\">\n      <h3>Can you Catch them all?</h3>\n      <h3>Catch one of each type of pokemon, but only one!</h3>\n      <button onClick={handleStart}>Start Game</button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport default function GameComplete(props) {\n  const [mew, setMew] = useState(\"Mew\");\n  const [mewImg, setMewImg] = useState(\n    \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/151.png\"\n  );\n  const [mewCaught, setMewCaught] = useState(false);\n\n  function handleMewCaught() {\n    props.setScore(151);\n    props.setHighScore(`151 in ${props.totalTime}`);\n    setMewCaught(true);\n  }\n\n  const restartGame = () => {\n    props.restartGame();\n    setMewCaught(false);\n    props.setCaughtAllPokemon(false);\n    props.setStartTime(new Date());\n    props.setSelectedCards([]);\n  };\n\n  return (\n    <div className=\"gameCompleteDiv\">\n      <h3>\n        Congratulations! You caught all {props.score} Pokemon in{\" \"}\n        {props.totalTime}\n      </h3>\n      {!mewCaught ? (\n        <div className=\"center\">\n          <h3>But, what's this? A wild Mew appeared!!</h3>\n          <div className=\"mewDiv\">\n            <img alt={mew} src={mewImg} onClick={handleMewCaught}></img>\n          </div>\n        </div>\n      ) : (\n        <div className=\"center\">\n          <h3>You are a true POKEMON MASTER!</h3>\n          <button onClick={restartGame}>Play Again?</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function BattleSlides({ battleSlideAnimation }) {\n  const [animationEnded, setAnimationEnded] = useState(false);\n  let hide;\n  if (animationEnded) {\n    hide = { display: \"none\", zIndex: 0 };\n  }\n  return (\n    <div style={hide}>\n      {battleSlideAnimation && (\n        <div\n          id=\"left\"\n          //   style={hide}\n          onAnimationEnd={() => {\n            setAnimationEnded(true);\n          }}\n          className=\"left-battleSlide\"\n        ></div>\n      )}\n      {battleSlideAnimation && (\n        <div\n          id=\"right\"\n          //   style={hide}\n          onAnimationEnd={() => {\n            setAnimationEnded(true);\n          }}\n          className=\"right-battleSlide\"\n        ></div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Score from \"./components/Score\";\nimport Card from \"./components/Card\";\nimport Title from \"./components/Title\";\nimport GameOver from \"./components/GameOver\";\nimport StartGameScreen from \"./components/StartGameScreen\";\nimport GameComplete from \"./components/GameComplete\";\nimport BattleSlides from \"./components/BattleSlides\";\nimport useKonamiCode from \"./components/KonamiCode\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  // const [isLoading, setIsLoading] = useState(false);\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonImages, setPokemonImages] = useState([]);\n  const [startGame, setStartGame] = useState(false);\n  const [caughtAllPokemon, setCaughtAllPokemon] = useState(false);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(\"\");\n  const [battleSlideAnimation, setBattleSlideAnimation] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [selectedCards, setSelectedCards] = useState([]);\n\n  useEffect(() => {\n    // setIsLoading(true);\n    let pokeNamesArray = [];\n    let pokeImagesArray = [];\n\n    const fetchData = async () => {\n      try {\n        // const controller = new AbortController();\n\n        for (let i = 0; i < 150; i++) {\n          let response = await fetch(\n            `https://pokeapi.co/api/v2/pokemon?limit=150`\n          );\n          let data = await response.json();\n          let pokemon = data.results[i].name;\n          pokeNamesArray.push(pokemon);\n          setPokemon(pokeNamesArray);\n        }\n        for (let i = 1; i < 151; i++) {\n          let imageResponse = await fetch(\n            `https://pokeapi.co/api/v2/pokemon/${i}`\n          );\n          let imageData = await imageResponse.json();\n          let pokeImages = imageData.sprites.front_default;\n          console.log(pokeImages);\n          pokeImagesArray.push(pokeImages);\n          setPokemonImages(pokeImagesArray);\n        }\n\n        // setIsLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n\n    // return () => {\n    //   controller.abort();\n    // };\n  }, []);\n\n  useKonamiCode(() => {\n    setScore(150);\n    setCaughtAllPokemon(true);\n    setEndTime(new Date());\n\n    setTotalTime(\n      new Date(endTime - startTime)\n        .toISOString()\n        .slice(14, 20)\n        .replace(\":\", \"m \")\n        .replace(\".\", \"s\")\n    );\n  });\n\n  function checkWin() {\n    if (score >= 149) {\n      setCaughtAllPokemon(true);\n      setHighScore(150);\n      setEndTime(new Date());\n\n      setTotalTime(\n        new Date(endTime - startTime)\n          .toISOString()\n          .slice(14, 20)\n          .replace(\":\", \"m \")\n          .replace(\".\", \"s\")\n      );\n    }\n  }\n\n  function handleStart() {\n    setBattleSlideAnimation(true);\n    setTimeout(() => {\n      setStartGame(true);\n      setStartTime(new Date());\n    }, 1200);\n  }\n\n  function handleClick(e) {\n    shuffleCards();\n    pushSelectedCards(e);\n    scoreLogic(e);\n    checkWin();\n    console.log(e.target.src);\n  }\n\n  function shuffleCards() {\n    let shuffled = [];\n    shuffled.push(\n      pokemon.sort(function () {\n        return 0.5 - Math.random();\n      })\n    );\n    setPokemon(shuffled);\n    setPokemonImages(\n      pokemonImages.sort(function () {\n        return 0.5 - Math.random();\n      })\n    );\n  }\n\n  function pushSelectedCards(e) {\n    setSelectedCards((prev) => {\n      return [...prev, e.target.src];\n    });\n  }\n\n  function scoreLogic(e) {\n    if (selectedCards.includes(e.target.src)) {\n      setHighScore(highScore > score ? highScore : score);\n      setSelectedCards([]);\n      setGameOver(true);\n    } else if (score >= highScore) {\n      setScore((previous) => previous + 1);\n      setHighScore((previous) => previous + 1);\n    } else {\n      setScore((previous) => previous + 1);\n    }\n  }\n\n  function restartGame() {\n    setGameOver(false);\n    setScore(0);\n    setStartTime(new Date());\n  }\n\n  return (\n    <>\n      <Title />\n      <Score gameOver={gameOver} score={score} highScore={highScore} />\n\n      <div className=\"gameDiv\">\n        {!startGame ? (\n          <StartGameScreen handleStart={handleStart} />\n        ) : !gameOver ? (\n          !caughtAllPokemon ? (\n            [...new Array(150)].map((e, card) => (\n              <Card\n                key={card}\n                cardInfo={card}\n                onClick={handleClick}\n                imgSrc={pokemonImages[card]}\n                imgAlt={pokemon[card]}\n              />\n            ))\n          ) : (\n            <GameComplete\n              score={score}\n              setScore={setScore}\n              setHighScore={setHighScore}\n              restartGame={restartGame}\n              setCaughtAllPokemon={setCaughtAllPokemon}\n              totalTime={totalTime}\n              setStartTime={setStartTime}\n              setSelectedCards={setSelectedCards}\n            />\n          )\n        ) : (\n          <GameOver\n            score={score}\n            highScore={highScore}\n            restartGame={restartGame}\n          />\n        )}\n        <BattleSlides battleSlideAnimation={battleSlideAnimation} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// TODO\n//DONE    Add a message for capturing all 150\n//DONE    make it possible to catch mew\n//DONE    Make a time along with highscore available to those who capture all 150\n//DONE    add a start game button\n//DONE    add pokemon images\n//DONE    start game function should also start a timer\n//DONE    clicking on the last pokemon should stop the timer, and the game complete screen should pop up\n//DONE    make mew available to catch, making sure it disappears when you catch it so there is not gameOver\n//            button to try again\n//DONE    randomize order of cards when clicked\n//DONE    play again? => clear selected pokemon array so you don't lose right away and set start time on play again?\n//DONE    make score and highscore component sticky or position absolute so it moves down with you as you scroll\n//DONE    make sure the image alt don't have the pokemon font, so fix the h3, h2, h1 properties\n//DONE    make the sliding thing lower or fix the camera position to the top when the button is pressed\n//        add pokemon battle music and possible an animation when you get into a battle\n//            victory music and defeat music\n//        make a folder for audio files and images\n//        make a copyright component\n//        have each pokemon make a sound when clicked\n//        reOrganize code into their own components\n//        find out why the time isn't correcting\n//        save score in local storage\n//        fix cursor: pointer and z-index issue\n","import React, { useState, useEffect } from \"react\";\n\nexport default function useKonamiCode(handler) {\n  // State to hold array of recently pressed keys\n  const [keys, setKeys] = useState([]);\n  const getKeyName = (keyCode) => {\n    return {\n      37: \"left\",\n      38: \"up\",\n      39: \"right\",\n      40: \"down\",\n      65: \"A\",\n      66: \"B\",\n    }[keyCode];\n  };\n\n  // Convert stored keys to string and match against konami code string\n  const isKonamiCode =\n    keys.join(\" \") === \"up up down down left right left right B A\";\n\n  useEffect(() => {\n    let timeout;\n\n    // When a key is pressed\n    window.document.onkeydown = (e) => {\n      // Update array of keys in state with new key\n      setKeys((currentKeys) => [...currentKeys, getKeyName(e.keyCode)]);\n\n      // Clear 5s timeout since key was just pressed\n      clearTimeout(timeout);\n\n      // Reset keys if 5s passes so user can try again\n      timeout = setTimeout(() => setKeys([]), 5000);\n    };\n  }, []);\n\n  // Once konami code is entered call handler function\n  // and reset keys so user can do it again.\n  useEffect(() => {\n    if (isKonamiCode) {\n      handler();\n      setKeys([]);\n    }\n  }, [isKonamiCode, handler]);\n\n  return isKonamiCode;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}